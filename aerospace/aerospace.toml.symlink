# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# after-startup-command = [
#   'exec-and-forget borders active_color=0xffe2e2e3 inactive_color=0xff414550 width=6.0'
# ]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# Workspace - Establish my workspaces and the commands to switch to them
#     See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-shift-ctrl-cmd-1 = 'workspace 1.Code'
alt-shift-ctrl-cmd-2 = 'workspace 2.Browse'
alt-shift-ctrl-cmd-3 = 'workspace 3.Entertainment'
alt-shift-ctrl-cmd-4 = 'workspace 4.Comms'
alt-shift-ctrl-cmd-5 = 'workspace 5.System'
alt-shift-ctrl-cmd-6 = 'workspace 6.Productivity'
alt-shift-ctrl-cmd-7 = 'workspace 7'
alt-shift-ctrl-cmd-8 = 'workspace 8'
alt-shift-ctrl-cmd-9 = 'workspace 9'
alt-shift-ctrl-cmd-0 = 'workspace 10'

# Move Node to Workspace - Moves the focues application to a specific workspace
#     See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-ctrl-1 = 'move-node-to-workspace 1.Code'
alt-shift-ctrl-2 = 'move-node-to-workspace 2.Browse'
alt-shift-ctrl-3 = 'move-node-to-workspace 3.Entertainment'
alt-shift-ctrl-4 = 'move-node-to-workspace 4.Comms'
alt-shift-ctrl-5 = 'move-node-to-workspace 5.System'
alt-shift-ctrl-6 = 'move-node-to-workspace 6.Productivity'
alt-shift-ctrl-7 = 'move-node-to-workspace 7'
alt-shift-ctrl-8 = 'move-node-to-workspace 8'
alt-shift-ctrl-9 = 'move-node-to-workspace 9'
alt-shift-ctrl-0 = 'move-node-to-workspace 10'

# Focus - change focused window using cardinal directions
#     See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-shift-ctrl-cmd-h = 'focus left'
alt-shift-ctrl-cmd-j = 'focus down'
alt-shift-ctrl-cmd-k = 'focus up'
alt-shift-ctrl-cmd-l = 'focus right'

# Workspace Back and Forth - switch between teh focused and previously focused workspace
#     See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-shift-ctrl-cmd-tab = 'workspace-back-and-forth'

# Move Workspace to Monitor - move the focused workspace to the next monitor 
#     See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-ctrl-tab = 'move-workspace-to-monitor --wrap-around next'

# Mode - toggle a different mode with its own set of key commands
#     See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-ctrl-cmd-semicolon = 'mode service'
alt-shift-ctrl-cmd-c = 'mode layout'

# Layout Binding Mode - will be used to modify the layout of my windows
#     See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.layout.binding]

# Binding - swich back to main binding
esc = 'mode main'
j = 'mode join'
m = 'mode move'

# Resize - resize the focused window
#     See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'
b = ['balance-sizes', 'mode main']

# Layout - change layout between tiles and accordion
#     See: https://nikitabobko.github.io/AeroSpace/commands#layout
t = ['layout tiles horizontal vertical', 'mode main']
a = ['layout accordion horizontal vertical', 'mode main']

# Custom Layouts
g = [                                                           # Grid Layout of focused window
  'layout h_tiles',
  'flatten-workspace-tree',
  'focus --dfs-index 0',
  'focus --boundaries-action wrap-around-the-workspace left',
  'join-with left',
  'focus left',
  'join-with left',
  'balance-sizes',
  'mode main'
]

# Join Binding - Sub binding of Layout to join apps
#     See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.join.binding]

esc = 'mode main'
# Join 
h = 'join-with left'
j = 'join-with down'
k = 'join-with up'
l = 'join-with right'

# Move Binding - Sub binding of Layout to move apps
#     See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.move.binding]

esc = 'mode main'
# Move - move focused window in the given direction
#     See: https://nikitabobko.github.io/AeroSpace/commands#move
h = 'move left'
j = 'move down'
k = 'move up'
l = 'move right'

# 'service' binding mode declaration.
#     See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']


# Window rules
# https://nikitabobko.github.io/AeroSpace/guide#callbacks
#
# To get app-id:
# - https://nikitabobko.github.io/AeroSpace/goodness#popular-apps-ids
# - `aerospace list-apps`

# Workspace 1 Code
[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = ['move-node-to-workspace 1.Code']

[[on-window-detected]]
if.app-id = 'com.jetbrains.datagrip'
run = ['move-node-to-workspace 1.Code']

[[on-window-detected]]
if.app-id = 'com.postmanlabs.mac'
run = ['move-node-to-workspace 1.Code']

# Workspace 2 Browse
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
if.during-aerospace-startup = true
run = ['move-node-to-workspace 2.Browse']

# Workspace 3 Entertainment
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = ['move-node-to-workspace 3.Entertainment']

[[on-window-detected]]
if.app-id = 'com.flexibits.fantastical2.mac'
run = ['move-node-to-workspace 3.Entertainment']

[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist'
run = ['move-node-to-workspace 3.Entertainment']

# Workspace 4 Comms
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace 4.Comms']

[[on-window-detected]]
if.app-id = 'ch.protonmail.desktop'
run = ['move-node-to-workspace 4.Comms']

[[on-window-detected]]
if.app-id = 'Mattermost.Desktop'
run = ['move-node-to-workspace 4.Comms']

[[on-window-detected]]
if.app-id = 'com.microsoft.Outlook'
run = ['move-node-to-workspace 4.Comms']

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = ['move-node-to-workspace 4.Comms']

# Workspace 5 System
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = ['layout floating', 'move-node-to-workspace 5.System']

[[on-window-detected]]
if.app-id = 'io.zsa.keymapp'
run = ['move-node-to-workspace 5.System']

# Workspace 6.Productivity

# Choose monitor to put each workspace on
[workspace-to-monitor-force-assignment]
'1.Code' = ['ka270h', 'seconday', 'main']
'2.Browse' = 'main'
'3.Entertainment' = 'main'
'4.Comms' = ['built-in', 'secondary', 'main']
'5.System' = ['built-in', 'secondary', 'main']
'6.Productivity' = 'main'

